name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-mingw-w64

      - name: Build for Linux AMD64
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
        run: |
          go build -o filabridge-linux-amd64 .
          chmod +x filabridge-linux-amd64

      - name: Build for Linux ARM64
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: arm64
          CC: aarch64-linux-gnu-gcc
        run: |
          go build -o filabridge-linux-arm64 .
          chmod +x filabridge-linux-arm64

      - name: Build for Windows AMD64
        env:
          CGO_ENABLED: 1
          GOOS: windows
          GOARCH: amd64
          CC: x86_64-w64-mingw32-gcc
        run: |
          go build -o filabridge-windows-amd64.exe .

      - name: Build for macOS AMD64
        env:
          CGO_ENABLED: 0
          GOOS: darwin
          GOARCH: amd64
        run: |
          go build -o filabridge-darwin-amd64 .
          chmod +x filabridge-darwin-amd64

      - name: Build for macOS ARM64
        env:
          CGO_ENABLED: 0
          GOOS: darwin
          GOARCH: arm64
        run: |
          go build -o filabridge-darwin-arm64 .
          chmod +x filabridge-darwin-arm64

      - name: Create checksums
        run: |
          sha256sum filabridge-* > checksums.txt
          cat checksums.txt

      - name: Extract version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Install git-chglog
        run: |
          curl -sSL https://git.io/git-chglog | bash -s -- -b /usr/local/bin
          git-chglog --version

      - name: Generate changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Generating changelog for version: $VERSION"
          
          # Generate changelog for this version only
          git-chglog --output CHANGELOG.md --next-tag $VERSION
          
          # Show what was generated
          echo "Generated changelog:"
          cat CHANGELOG.md

      - name: Commit updated changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "chore(release): update changelog for ${{ github.ref_name }}" || exit 0
          git push

      - name: Extract changelog for release notes
        id: changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Extracting changelog for release notes: $VERSION"
          
          # Extract content for this version from the generated changelog
          CHANGELOG=$(awk "/## \[$VERSION\]/,/## \[.*\]/{if(/## \[$VERSION\]/) next; if(/## \[.*\]/) exit; print}" CHANGELOG.md)
          
          # Output the changelog
          {
            echo "CHANGELOG<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            filabridge-linux-amd64
            filabridge-linux-arm64
            filabridge-windows-amd64.exe
            filabridge-darwin-amd64
            filabridge-darwin-arm64
            checksums.txt
          body: |
            # FilaBridge ${{ steps.get_version.outputs.VERSION }}
            
            ## Installation
            
            Download the appropriate binary for your platform:
            
            - **Linux (AMD64)**: `filabridge-linux-amd64`
            - **Linux (ARM64)**: `filabridge-linux-arm64` (Raspberry Pi, etc.)
            - **Windows (AMD64)**: `filabridge-windows-amd64.exe`
            - **macOS (Intel)**: `filabridge-darwin-amd64`
            - **macOS (Apple Silicon)**: `filabridge-darwin-arm64`
            
            ### Quick Start
            
            1. Download the binary for your platform
            2. Make it executable (Linux/macOS): `chmod +x filabridge-*`
            3. Run Spoolman: `docker run -d --name spoolman -p 8000:8000 ghcr.io/donkie/spoolman:latest`
            4. Start FilaBridge: `./filabridge-*`
            5. Open http://localhost:5000 and configure your printers
            
            ## Verify Downloads
            
            Verify your download using the checksums:
            ```bash
            sha256sum -c checksums.txt
            ```
            
            ## What's New
            ${{ steps.changelog.outputs.CHANGELOG }}
            
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

